schema {
  query: RootQuery
  mutation: RootMutation
  subscription: RootSubscription
}

type Cat {
  id: ID!
  name: String!
  nickName: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime
  avatarUrl: String!
  age: Int!
}

"""A connection to a list of items."""
type CatConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CatEdge]
  count: Int
}

"""An edge in a connection."""
type CatEdge {
  """The item at the end of the edge"""
  node: Cat

  """A cursor for use in pagination"""
  cursor: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""Root Mutation"""
type RootMutation {
  addCat(name: String!, nickName: String!, description: String!, avatarUrl: String!, age: Int!): Cat
  removeCat(id: ID!): Cat
}

"""Root Query"""
type RootQuery {
  cat(id: ID): Cat
  allCats(after: String, first: Int, before: String, last: Int): CatConnection
}

"""Root Subscription"""
type RootSubscription {
  newCat: Cat
  removedCat: Cat
}
